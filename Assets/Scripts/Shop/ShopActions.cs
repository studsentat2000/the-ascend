//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/Shop/ShopActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ShopActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ShopActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ShopActions"",
    ""maps"": [
        {
            ""name"": ""ShopInput"",
            ""id"": ""95dcc38b-c48b-4c85-9928-cd610165e735"",
            ""actions"": [
                {
                    ""name"": ""Shop"",
                    ""type"": ""Button"",
                    ""id"": ""bdc2838d-a794-496e-a331-66d265e7a40c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2b33491b-ea07-4b64-bd6d-bfbbd270fe84"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""WhatIsThis"",
                    ""action"": ""Shop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""WhatIsThis"",
            ""bindingGroup"": ""WhatIsThis"",
            ""devices"": []
        }
    ]
}");
        // ShopInput
        m_ShopInput = asset.FindActionMap("ShopInput", throwIfNotFound: true);
        m_ShopInput_Shop = m_ShopInput.FindAction("Shop", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ShopInput
    private readonly InputActionMap m_ShopInput;
    private List<IShopInputActions> m_ShopInputActionsCallbackInterfaces = new List<IShopInputActions>();
    private readonly InputAction m_ShopInput_Shop;
    public struct ShopInputActions
    {
        private @ShopActions m_Wrapper;
        public ShopInputActions(@ShopActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Shop => m_Wrapper.m_ShopInput_Shop;
        public InputActionMap Get() { return m_Wrapper.m_ShopInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ShopInputActions set) { return set.Get(); }
        public void AddCallbacks(IShopInputActions instance)
        {
            if (instance == null || m_Wrapper.m_ShopInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ShopInputActionsCallbackInterfaces.Add(instance);
            @Shop.started += instance.OnShop;
            @Shop.performed += instance.OnShop;
            @Shop.canceled += instance.OnShop;
        }

        private void UnregisterCallbacks(IShopInputActions instance)
        {
            @Shop.started -= instance.OnShop;
            @Shop.performed -= instance.OnShop;
            @Shop.canceled -= instance.OnShop;
        }

        public void RemoveCallbacks(IShopInputActions instance)
        {
            if (m_Wrapper.m_ShopInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IShopInputActions instance)
        {
            foreach (var item in m_Wrapper.m_ShopInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ShopInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ShopInputActions @ShopInput => new ShopInputActions(this);
    private int m_WhatIsThisSchemeIndex = -1;
    public InputControlScheme WhatIsThisScheme
    {
        get
        {
            if (m_WhatIsThisSchemeIndex == -1) m_WhatIsThisSchemeIndex = asset.FindControlSchemeIndex("WhatIsThis");
            return asset.controlSchemes[m_WhatIsThisSchemeIndex];
        }
    }
    public interface IShopInputActions
    {
        void OnShop(InputAction.CallbackContext context);
    }
}
